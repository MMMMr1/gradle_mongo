apiVersion: v1
kind: Service
metadata:
  name: eureka-server
  namespace: kafka-cluster
spec:
  selector:
    app: eureka-server
  ports:
    - protocol: TCP
      port: 8761
      targetPort: 8761
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server
  namespace: kafka-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eureka-server
  template:
    metadata:
      labels:
        app: eureka-server
    spec:
      containers:
        - name: eureka
          image: marymary88/eureka-server:1.0.0 #          stoc/eureka
          ports:
            - containerPort: 8761
#          env:
#            - name: MY_POD_NAME
#              valueFrom:
#                fieldRef:
#                  fieldPath: metadata.name
#              # Due to camelcase issues with "defaultZone" and "preferIpAddress", _JAVA_OPTIONS is used here
#            - name: _JAVA_OPTIONS
#              value: -Deureka.instance.preferIpAddress=false -Deureka.client.serviceUrl.defaultZone=http://eureka-0.eureka:8761/eureka/,http://eureka-1.eureka:8761/eureka/
#            - name: EUREKA_CLIENT_REGISTERWITHEUREKA
#              value: "true"
#            - name: EUREKA_CLIENT_FETCHREGISTRY
#              value: "true"
#            # The hostnames must match with the the eureka serviceUrls, otherwise the replicas are reported as unavailable in the eureka dashboard
#            - name: EUREKA_INSTANCE_HOSTNAME
#              value: ${MY_POD_NAME}.eureka
#  # No need to start the pods in order. We just need the stable network identity
#podManagementPolicy: "Parallel"